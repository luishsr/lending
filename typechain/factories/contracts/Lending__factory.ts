/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lending, LendingInterface } from "../../contracts/Lending";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Lending_AmountMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "Lending_OnlyOwnerCanPerformOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LendingRequestApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LendingRequestRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LendingRequestSubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "approveRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "findRequestById",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "enum ILending.LendingRequestStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct ILending.LendingRequest",
        name: "request",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "rejectRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "submitRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060025534801561001557600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109fc806100666000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631cdd16531461005c5780632a56a0d01461008c5780632d7788db146100bc578063893d20e8146100d8578063d7d1bbdb146100f6575b600080fd5b61007660048036038101906100719190610797565b610112565b60405161008391906107d3565b60405180910390f35b6100a660048036038101906100a19190610797565b6102b3565b6040516100b3919061090a565b60405180910390f35b6100d660048036038101906100d19190610797565b610384565b005b6100e0610533565b6040516100ed9190610934565b60405180910390f35b610110600480360381019061010b9190610797565b61055d565b005b6000600182101561014f576040517f2ff09ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008154809291906101629061097e565b91905055506000604051806080016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001600060028111156101b2576101b161083e565b5b81525090508060008060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908360028111156102525761025161083e565b5b02179055509050503373ffffffffffffffffffffffffffffffffffffffff167ff71762b216f947177d2aa1017d02fec681d4e3e9f580bf3b85a911652d55cf12846040516102a091906107d3565b60405180910390a2600254915050919050565b6102bb61070c565b600080838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff1660028111156103675761036661083e565b5b60028111156103795761037861083e565b5b815250509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040b576040517f105039c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff1660028111156104b9576104b861083e565b5b60028111156104cb576104ca61083e565b5b8152505090506002816060019060028111156104ea576104e961083e565b5b908160028111156104fe576104fd61083e565b5b81525050817f3dee99928fa772cb02c7f6289138d15905819010a4d42554ef5b6d247c92458560405160405180910390a25050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105e4576040517f105039c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff1660028111156106925761069161083e565b5b60028111156106a4576106a361083e565b5b8152505090506001816060019060028111156106c3576106c261083e565b5b908160028111156106d7576106d661083e565b5b81525050817f417baa7a4df958acdec4c7092df0dbc180eeb4be2d00caa52e2b508f14089c6e60405160405180910390a25050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600060028111156107565761075561083e565b5b81525090565b600080fd5b6000819050919050565b61077481610761565b811461077f57600080fd5b50565b6000813590506107918161076b565b92915050565b6000602082840312156107ad576107ac61075c565b5b60006107bb84828501610782565b91505092915050565b6107cd81610761565b82525050565b60006020820190506107e860008301846107c4565b92915050565b6107f781610761565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610828826107fd565b9050919050565b6108388161081d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061087e5761087d61083e565b5b50565b600081905061088f8261086d565b919050565b600061089f82610881565b9050919050565b6108af81610894565b82525050565b6080820160008201516108cb60008501826107ee565b5060208201516108de602085018261082f565b5060408201516108f160408501826107ee565b50606082015161090460608501826108a6565b50505050565b600060808201905061091f60008301846108b5565b92915050565b61092e8161081d565b82525050565b60006020820190506109496000830184610925565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098982610761565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109bb576109ba61094f565b5b60018201905091905056fea26469706673582212204391477bdb117ce8d63f4f7d55c22b4ffd639af7e89f493ae7775df1dca3a47664736f6c63430008140033";

type LendingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lending__factory extends ContractFactory {
  constructor(...args: LendingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Lending> {
    return super.deploy(overrides || {}) as Promise<Lending>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Lending {
    return super.attach(address) as Lending;
  }
  override connect(signer: Signer): Lending__factory {
    return super.connect(signer) as Lending__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingInterface {
    return new utils.Interface(_abi) as LendingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lending {
    return new Contract(address, _abi, signerOrProvider) as Lending;
  }
}
