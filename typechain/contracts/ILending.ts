/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../common";

export interface ILendingInterface extends utils.Interface {
  functions: {};

  events: {
    "LendingRequestApproved(uint256)": EventFragment;
    "LendingRequestRejected(uint256)": EventFragment;
    "LendingRequestSubmitted(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LendingRequestApproved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LendingRequestRejected"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LendingRequestSubmitted"): EventFragment;
}

export interface LendingRequestApprovedEventObject {
  id: BigNumber;
}
export type LendingRequestApprovedEvent = TypedEvent<
  [BigNumber],
  LendingRequestApprovedEventObject
>;

export type LendingRequestApprovedEventFilter =
  TypedEventFilter<LendingRequestApprovedEvent>;

export interface LendingRequestRejectedEventObject {
  id: BigNumber;
}
export type LendingRequestRejectedEvent = TypedEvent<
  [BigNumber],
  LendingRequestRejectedEventObject
>;

export type LendingRequestRejectedEventFilter =
  TypedEventFilter<LendingRequestRejectedEvent>;

export interface LendingRequestSubmittedEventObject {
  from: string;
  amount: BigNumber;
}
export type LendingRequestSubmittedEvent = TypedEvent<
  [string, BigNumber],
  LendingRequestSubmittedEventObject
>;

export type LendingRequestSubmittedEventFilter =
  TypedEventFilter<LendingRequestSubmittedEvent>;

export interface ILending extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ILendingInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "LendingRequestApproved(uint256)"(
      id?: BigNumberish | null
    ): LendingRequestApprovedEventFilter;
    LendingRequestApproved(
      id?: BigNumberish | null
    ): LendingRequestApprovedEventFilter;

    "LendingRequestRejected(uint256)"(
      id?: BigNumberish | null
    ): LendingRequestRejectedEventFilter;
    LendingRequestRejected(
      id?: BigNumberish | null
    ): LendingRequestRejectedEventFilter;

    "LendingRequestSubmitted(address,uint256)"(
      from?: string | null,
      amount?: null
    ): LendingRequestSubmittedEventFilter;
    LendingRequestSubmitted(
      from?: string | null,
      amount?: null
    ): LendingRequestSubmittedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
