/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ILending, ILendingInterface } from "../../contracts/ILending";

const _abi = [
  {
    inputs: [],
    name: "Lending_AmountMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "Lending_OnlyOwnerCanPerformOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LendingRequestApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LendingRequestRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LendingRequestSubmitted",
    type: "event",
  },
] as const;

export class ILending__factory {
  static readonly abi = _abi;
  static createInterface(): ILendingInterface {
    return new utils.Interface(_abi) as ILendingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILending {
    return new Contract(address, _abi, signerOrProvider) as ILending;
  }
}
